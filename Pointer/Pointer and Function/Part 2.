// Hoán đổi 2 số bằng hàm, mục đích của hàm này là để tái sử dụng lại cho nhiều lần sau
#include <stdio.h>
void swap_no_pointer(int a, int b) { // Lúc này a và b hiểu đơn giản là 2 biến
    // a được cấp phát tại địa chỉ 0x101, b tại địa chỉ 0x102
    // a và b là bản sao của x và y từ main, không phải biến gốc
    int temp = a; // Lưu giá trị của a vào biến tạm
    a = b;        // Gán giá trị của b cho a
    b = temp;     // Gán giá trị temp (giá trị ban đầu của a) cho b
    // Thay đổi này chỉ ảnh hưởng đến a và b trong hàm, không ảnh hưởng đến x và y
}
void swap_with_pointer(int *a, int *b) { // Lúc này a và b là con trỏ, lưu địa chỉ của các biến gốc
    // Giả sử a lưu địa chỉ 0x100, b lưu địa chỉ 0x104
    // *a là giá trị tại địa chỉ 0x100, *b là giá trị tại địa chỉ 0x104
    int temp = *a; // Lưu giá trị tại địa chỉ a vào biến tạm
    *a = *b;       // Gán giá trị tại địa chỉ b cho địa chỉ a
    *b = temp;     // Gán giá trị temp (giá trị ban đầu của a) cho địa chỉ b
    // Kết quả: Giá trị tại địa chỉ 0x100 và 0x104 đã được hoán đổi
}

int main() {
    // Giả sử x được cấp phát tại địa chỉ 0x100, y tại địa chỉ 0x104
    int x = 5, y = 10;

    // Giá trị ban đầu
    printf("Gia tri ban dau: x = %d, y = %d\n", x, y);
    swap_no_pointer(x, y);
    // Giá trị của x (5) và y (10) được sao chép vào tham số a và b của hàm (Cách hoạt động của C)
    // Thay đổi a và b trong hàm không ảnh hưởng đến x và y
    printf("Sau khi goi swap_no_pointer: x = %d, y = %d\n\n", x, y);

    swap_with_pointer(&x, &y);
    // &x trả về địa chỉ 0x100, &y trả về địa chỉ 0x104
    // Hàm swap_with_pointer thay đổi trực tiếp giá trị tại các địa chỉ này
    // Kết quả: x = 10, y = 5 vì giá trị tại địa chỉ 0x100 và 0x104 đã được hoán đổi
    printf("Sau khi goi swap_with_pointer: x = %d, y = %d\n", x, y);
    return 0;
}
